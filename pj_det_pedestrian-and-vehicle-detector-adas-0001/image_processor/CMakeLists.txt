cmake_minimum_required(VERSION 3.0)

set(LibraryName "ImageProcessor")

# Create library
add_library (${LibraryName} image_processor.cpp image_processor.h detection_engine.cpp detection_engine.h prior_bbox.cpp prior_bbox.h)

# For OpenCV
find_package(OpenCV REQUIRED)
target_include_directories(${LibraryName} PUBLIC ${OpenCV_INCLUDE_DIRS})
target_link_libraries(${LibraryName} ${OpenCV_LIBS})

# Link Common Helper module
add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/../../common_helper common_helper)
target_include_directories(${LibraryName} PUBLIC ${CMAKE_CURRENT_LIST_DIR}/../../common_helper)
target_link_libraries(${LibraryName} CommonHelper)

# For InferenceHelper
set(INFERENCE_HELPER_DIR ${CMAKE_CURRENT_LIST_DIR}/../../InferenceHelper/)
add_subdirectory(${INFERENCE_HELPER_DIR}/inference_helper inference_helper)
target_include_directories(${LibraryName} PUBLIC ${INFERENCE_HELPER_DIR}/inference_helper)
target_link_libraries(${LibraryName} InferenceHelper)

# Add definition to select framework automatically. You don't need this in the real product
if(INFERENCE_HELPER_ENABLE_OPENCV)
    add_definitions(-DINFERENCE_HELPER_ENABLE_OPENCV)
endif()
if(INFERENCE_HELPER_ENABLE_TENSORRT)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TENSORRT)
endif()
if(INFERENCE_HELPER_ENABLE_TFLITE)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TFLITE)
endif()
if(INFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_GPU)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_GPU)
endif()
if(INFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_EDGETPU)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_EDGETPU)
endif()
if(INFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_XNNPACK)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_XNNPACK)
endif()
if(INFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_NNAPI)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TFLITE_DELEGATE_NNAPI)
endif()
if(INFERENCE_HELPER_ENABLE_NCNN)
    add_definitions(-DINFERENCE_HELPER_ENABLE_NCNN)
endif()
if(INFERENCE_HELPER_ENABLE_MNN)
    add_definitions(-DINFERENCE_HELPER_ENABLE_MNN)
endif()
if(INFERENCE_HELPER_ENABLE_SNPE)
    add_definitions(-DINFERENCE_HELPER_ENABLE_SNPE)
endif()
if(INFERENCE_HELPER_ENABLE_ARMNN)
    add_definitions(-DINFERENCE_HELPER_ENABLE_ARMNN)
endif()
if(INFERENCE_HELPER_ENABLE_NNABLA)
    add_definitions(-DINFERENCE_HELPER_ENABLE_NNABLA)
endif()
if(INFERENCE_HELPER_ENABLE_NNABLA_CUDA)
    add_definitions(-DINFERENCE_HELPER_ENABLE_NNABLA_CUDA)
endif()
if(INFERENCE_HELPER_ENABLE_ONNX_RUNTIME)
    add_definitions(-DINFERENCE_HELPER_ENABLE_ONNX_RUNTIME)
endif()
if(INFERENCE_HELPER_ENABLE_ONNX_RUNTIME_CUDA)
    add_definitions(-DINFERENCE_HELPER_ENABLE_ONNX_RUNTIME_CUDA)
endif()
if(INFERENCE_HELPER_ENABLE_LIBTORCH)
    add_definitions(-DINFERENCE_HELPER_ENABLE_LIBTORCH)
endif()
if(INFERENCE_HELPER_ENABLE_LIBTORCH_CUDA)
    add_definitions(-DINFERENCE_HELPER_ENABLE_LIBTORCH_CUDA)
endif()
if(INFERENCE_HELPER_ENABLE_TENSORFLOW)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TENSORFLOW)
endif()
if(INFERENCE_HELPER_ENABLE_TENSORFLOW_GPU)
    add_definitions(-DINFERENCE_HELPER_ENABLE_TENSORFLOW_GPU)
endif()